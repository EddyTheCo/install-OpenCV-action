name: release

run-name: ${{ github.actor }} ${{ github.event_name }} to ${{ github.base_ref }}
on:

  push:
    tags:
      - '*'

jobs:
  build_test_package:
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest,windows-latest]
        build_wasm: [true,false]
        exclude:
          - os: macos-latest 
            build_wasm: true
          - os: windows-latest 
            build_wasm: true
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:

      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install ninja cmake
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake doxygen

      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake ninja


      - name: Build-install-OpenCV
        if: startsWith(matrix.os, 'windows')
        uses : EddyTheCo/install-OpenCV-action/@main
        with:
          shell_1: 'pwsh'
          Install-Dir: ${{ runner.temp }}/OpenCV-${{ matrix.os }}-wasm_${{ matrix.build_wasm }} 

      - name: Build-install-OpenCV
        if: ${{ !startsWith(matrix.os, 'windows') }}
        uses : EddyTheCo/install-OpenCV-action/@main
        with:
          build_wasm: matrix.build_wasm
          Install-Dir: ${{ runner.temp }}/OpenCV-${{ matrix.os }}-wasm_${{ matrix.build_wasm }}

      - name: Package  
        run: |
          cmake -E make_directory ${{runner.temp}}/packages
          cmake -E tar c ${{runner.temp}}/packages/OpenCV-${{ matrix.os }}-wasm_${{ matrix.build_wasm }}.tar -- ${{ runner.temp }}/OpenCV-${{ matrix.os }}-wasm_${{ matrix.build_wasm }}/ 


      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-wasm_${{ matrix.build_wasm }}
          path: ${{ runner.temp }}/packages/*


  release:
    needs: build_test_package
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
          
      - uses: actions/checkout@v3
    
      - uses: actions/download-artifact@v3
        with:
           path: artifacts
      - name: Display structure of downloaded files
        run: ls -R
          
      - name: Releases 
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*/*       
